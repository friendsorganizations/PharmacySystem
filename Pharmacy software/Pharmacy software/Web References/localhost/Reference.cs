//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Pharmacy_software.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback forgetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addOperationCompleted;
        
        private System.Threading.SendOrPostCallback delete_productOperationCompleted;
        
        private System.Threading.SendOrPostCallback showAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchFormulaOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback add_orderOperationCompleted;
        
        private System.Threading.SendOrPostCallback showorderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback update_StockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::Pharmacy_software.Properties.Settings.Default.Pharmacy_software_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event resetPasswordCompletedEventHandler resetPasswordCompleted;
        
        /// <remarks/>
        public event forgetPasswordCompletedEventHandler forgetPasswordCompleted;
        
        /// <remarks/>
        public event addCompletedEventHandler addCompleted;
        
        /// <remarks/>
        public event delete_productCompletedEventHandler delete_productCompleted;
        
        /// <remarks/>
        public event showAllCompletedEventHandler showAllCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event searchNameCompletedEventHandler searchNameCompleted;
        
        /// <remarks/>
        public event searchFormulaCompletedEventHandler searchFormulaCompleted;
        
        /// <remarks/>
        public event searchTypeCompletedEventHandler searchTypeCompleted;
        
        /// <remarks/>
        public event add_orderCompletedEventHandler add_orderCompleted;
        
        /// <remarks/>
        public event showorderCompletedEventHandler showorderCompleted;
        
        /// <remarks/>
        public event deleteOrderCompletedEventHandler deleteOrderCompleted;
        
        /// <remarks/>
        public event update_StockCompletedEventHandler update_StockCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Register([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            this.Invoke("Register", new object[] {
                        name,
                        password});
        }
        
        /// <remarks/>
        public void RegisterAsync(string name, string password) {
            this.RegisterAsync(name, password, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string name, string password, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        name,
                        password}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void login([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool loginResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool loginResultSpecified) {
            object[] results = this.Invoke("login", new object[] {
                        name,
                        password});
            loginResult = ((bool)(results[0]));
            loginResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void loginAsync(string name, string password) {
            this.loginAsync(name, password, null);
        }
        
        /// <remarks/>
        public void loginAsync(string name, string password, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        name,
                        password}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/resetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void resetPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string old_password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string new_password, out bool resetPasswordResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool resetPasswordResultSpecified) {
            object[] results = this.Invoke("resetPassword", new object[] {
                        old_password,
                        new_password});
            resetPasswordResult = ((bool)(results[0]));
            resetPasswordResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string old_password, string new_password) {
            this.resetPasswordAsync(old_password, new_password, null);
        }
        
        /// <remarks/>
        public void resetPasswordAsync(string old_password, string new_password, object userState) {
            if ((this.resetPasswordOperationCompleted == null)) {
                this.resetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPasswordOperationCompleted);
            }
            this.InvokeAsync("resetPassword", new object[] {
                        old_password,
                        new_password}, this.resetPasswordOperationCompleted, userState);
        }
        
        private void OnresetPasswordOperationCompleted(object arg) {
            if ((this.resetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPasswordCompleted(this, new resetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/forgetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void forgetPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string new_password, out bool forgetPasswordResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool forgetPasswordResultSpecified) {
            object[] results = this.Invoke("forgetPassword", new object[] {
                        name,
                        new_password});
            forgetPasswordResult = ((bool)(results[0]));
            forgetPasswordResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void forgetPasswordAsync(string name, string new_password) {
            this.forgetPasswordAsync(name, new_password, null);
        }
        
        /// <remarks/>
        public void forgetPasswordAsync(string name, string new_password, object userState) {
            if ((this.forgetPasswordOperationCompleted == null)) {
                this.forgetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforgetPasswordOperationCompleted);
            }
            this.InvokeAsync("forgetPassword", new object[] {
                        name,
                        new_password}, this.forgetPasswordOperationCompleted, userState);
        }
        
        private void OnforgetPasswordOperationCompleted(object arg) {
            if ((this.forgetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forgetPasswordCompleted(this, new forgetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/add", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void add([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string formula, int price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, System.DateTime exp, [System.Xml.Serialization.XmlIgnoreAttribute()] bool expSpecified) {
            this.Invoke("add", new object[] {
                        name,
                        type,
                        formula,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        exp,
                        expSpecified});
        }
        
        /// <remarks/>
        public void addAsync(string name, string type, string formula, int price, bool priceSpecified, int quantity, bool quantitySpecified, System.DateTime exp, bool expSpecified) {
            this.addAsync(name, type, formula, price, priceSpecified, quantity, quantitySpecified, exp, expSpecified, null);
        }
        
        /// <remarks/>
        public void addAsync(string name, string type, string formula, int price, bool priceSpecified, int quantity, bool quantitySpecified, System.DateTime exp, bool expSpecified, object userState) {
            if ((this.addOperationCompleted == null)) {
                this.addOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOperationCompleted);
            }
            this.InvokeAsync("add", new object[] {
                        name,
                        type,
                        formula,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        exp,
                        expSpecified}, this.addOperationCompleted, userState);
        }
        
        private void OnaddOperationCompleted(object arg) {
            if ((this.addCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/delete_product", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void delete_product([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type) {
            this.Invoke("delete_product", new object[] {
                        name,
                        type});
        }
        
        /// <remarks/>
        public void delete_productAsync(string name, string type) {
            this.delete_productAsync(name, type, null);
        }
        
        /// <remarks/>
        public void delete_productAsync(string name, string type, object userState) {
            if ((this.delete_productOperationCompleted == null)) {
                this.delete_productOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondelete_productOperationCompleted);
            }
            this.InvokeAsync("delete_product", new object[] {
                        name,
                        type}, this.delete_productOperationCompleted, userState);
        }
        
        private void Ondelete_productOperationCompleted(object arg) {
            if ((this.delete_productCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delete_productCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/showAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
        public StockClass[] showAll() {
            object[] results = this.Invoke("showAll", new object[0]);
            return ((StockClass[])(results[0]));
        }
        
        /// <remarks/>
        public void showAllAsync() {
            this.showAllAsync(null);
        }
        
        /// <remarks/>
        public void showAllAsync(object userState) {
            if ((this.showAllOperationCompleted == null)) {
                this.showAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowAllOperationCompleted);
            }
            this.InvokeAsync("showAll", new object[0], this.showAllOperationCompleted, userState);
        }
        
        private void OnshowAllOperationCompleted(object arg) {
            if ((this.showAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showAllCompleted(this, new showAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void update([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, int price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, System.DateTime exp, [System.Xml.Serialization.XmlIgnoreAttribute()] bool expSpecified) {
            this.Invoke("update", new object[] {
                        name,
                        type,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        exp,
                        expSpecified});
        }
        
        /// <remarks/>
        public void updateAsync(string name, string type, int price, bool priceSpecified, int quantity, bool quantitySpecified, System.DateTime exp, bool expSpecified) {
            this.updateAsync(name, type, price, priceSpecified, quantity, quantitySpecified, exp, expSpecified, null);
        }
        
        /// <remarks/>
        public void updateAsync(string name, string type, int price, bool priceSpecified, int quantity, bool quantitySpecified, System.DateTime exp, bool expSpecified, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        name,
                        type,
                        price,
                        priceSpecified,
                        quantity,
                        quantitySpecified,
                        exp,
                        expSpecified}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/searchName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
        public StockClass[] searchName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("searchName", new object[] {
                        name});
            return ((StockClass[])(results[0]));
        }
        
        /// <remarks/>
        public void searchNameAsync(string name) {
            this.searchNameAsync(name, null);
        }
        
        /// <remarks/>
        public void searchNameAsync(string name, object userState) {
            if ((this.searchNameOperationCompleted == null)) {
                this.searchNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchNameOperationCompleted);
            }
            this.InvokeAsync("searchName", new object[] {
                        name}, this.searchNameOperationCompleted, userState);
        }
        
        private void OnsearchNameOperationCompleted(object arg) {
            if ((this.searchNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchNameCompleted(this, new searchNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/searchFormula", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
        public StockClass[] searchFormula([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string formula) {
            object[] results = this.Invoke("searchFormula", new object[] {
                        formula});
            return ((StockClass[])(results[0]));
        }
        
        /// <remarks/>
        public void searchFormulaAsync(string formula) {
            this.searchFormulaAsync(formula, null);
        }
        
        /// <remarks/>
        public void searchFormulaAsync(string formula, object userState) {
            if ((this.searchFormulaOperationCompleted == null)) {
                this.searchFormulaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchFormulaOperationCompleted);
            }
            this.InvokeAsync("searchFormula", new object[] {
                        formula}, this.searchFormulaOperationCompleted, userState);
        }
        
        private void OnsearchFormulaOperationCompleted(object arg) {
            if ((this.searchFormulaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchFormulaCompleted(this, new searchFormulaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/searchType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
        public StockClass[] searchType([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type) {
            object[] results = this.Invoke("searchType", new object[] {
                        type});
            return ((StockClass[])(results[0]));
        }
        
        /// <remarks/>
        public void searchTypeAsync(string type) {
            this.searchTypeAsync(type, null);
        }
        
        /// <remarks/>
        public void searchTypeAsync(string type, object userState) {
            if ((this.searchTypeOperationCompleted == null)) {
                this.searchTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTypeOperationCompleted);
            }
            this.InvokeAsync("searchType", new object[] {
                        type}, this.searchTypeOperationCompleted, userState);
        }
        
        private void OnsearchTypeOperationCompleted(object arg) {
            if ((this.searchTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTypeCompleted(this, new searchTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/add_order", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void add_order([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, int price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified, int total, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified) {
            this.Invoke("add_order", new object[] {
                        name,
                        type,
                        quantity,
                        quantitySpecified,
                        price,
                        priceSpecified,
                        total,
                        totalSpecified});
        }
        
        /// <remarks/>
        public void add_orderAsync(string name, string type, int quantity, bool quantitySpecified, int price, bool priceSpecified, int total, bool totalSpecified) {
            this.add_orderAsync(name, type, quantity, quantitySpecified, price, priceSpecified, total, totalSpecified, null);
        }
        
        /// <remarks/>
        public void add_orderAsync(string name, string type, int quantity, bool quantitySpecified, int price, bool priceSpecified, int total, bool totalSpecified, object userState) {
            if ((this.add_orderOperationCompleted == null)) {
                this.add_orderOperationCompleted = new System.Threading.SendOrPostCallback(this.Onadd_orderOperationCompleted);
            }
            this.InvokeAsync("add_order", new object[] {
                        name,
                        type,
                        quantity,
                        quantitySpecified,
                        price,
                        priceSpecified,
                        total,
                        totalSpecified}, this.add_orderOperationCompleted, userState);
        }
        
        private void Onadd_orderOperationCompleted(object arg) {
            if ((this.add_orderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.add_orderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/showorder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
        public OrderClass[] showorder() {
            object[] results = this.Invoke("showorder", new object[0]);
            return ((OrderClass[])(results[0]));
        }
        
        /// <remarks/>
        public void showorderAsync() {
            this.showorderAsync(null);
        }
        
        /// <remarks/>
        public void showorderAsync(object userState) {
            if ((this.showorderOperationCompleted == null)) {
                this.showorderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshoworderOperationCompleted);
            }
            this.InvokeAsync("showorder", new object[0], this.showorderOperationCompleted, userState);
        }
        
        private void OnshoworderOperationCompleted(object arg) {
            if ((this.showorderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showorderCompleted(this, new showorderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteOrder(int index, [System.Xml.Serialization.XmlIgnoreAttribute()] bool indexSpecified) {
            this.Invoke("deleteOrder", new object[] {
                        index,
                        indexSpecified});
        }
        
        /// <remarks/>
        public void deleteOrderAsync(int index, bool indexSpecified) {
            this.deleteOrderAsync(index, indexSpecified, null);
        }
        
        /// <remarks/>
        public void deleteOrderAsync(int index, bool indexSpecified, object userState) {
            if ((this.deleteOrderOperationCompleted == null)) {
                this.deleteOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOrderOperationCompleted);
            }
            this.InvokeAsync("deleteOrder", new object[] {
                        index,
                        indexSpecified}, this.deleteOrderOperationCompleted, userState);
        }
        
        private void OndeleteOrderOperationCompleted(object arg) {
            if ((this.deleteOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/update_Stock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void update_Stock([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified) {
            this.Invoke("update_Stock", new object[] {
                        name,
                        type,
                        quantity,
                        quantitySpecified});
        }
        
        /// <remarks/>
        public void update_StockAsync(string name, string type, int quantity, bool quantitySpecified) {
            this.update_StockAsync(name, type, quantity, quantitySpecified, null);
        }
        
        /// <remarks/>
        public void update_StockAsync(string name, string type, int quantity, bool quantitySpecified, object userState) {
            if ((this.update_StockOperationCompleted == null)) {
                this.update_StockOperationCompleted = new System.Threading.SendOrPostCallback(this.Onupdate_StockOperationCompleted);
            }
            this.InvokeAsync("update_Stock", new object[] {
                        name,
                        type,
                        quantity,
                        quantitySpecified}, this.update_StockOperationCompleted, userState);
        }
        
        private void Onupdate_StockOperationCompleted(object arg) {
            if ((this.update_StockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.update_StockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("GetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified) {
            this.GetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        value,
                        valueSpecified}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
    public partial class StockClass {
        
        private System.DateTime itemDateField;
        
        private bool itemDateFieldSpecified;
        
        private string itemFormulaField;
        
        private string itemNameField;
        
        private int itemPriceField;
        
        private bool itemPriceFieldSpecified;
        
        private int itemQuantityField;
        
        private bool itemQuantityFieldSpecified;
        
        private string itemTypeField;
        
        /// <remarks/>
        public System.DateTime ItemDate {
            get {
                return this.itemDateField;
            }
            set {
                this.itemDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemDateSpecified {
            get {
                return this.itemDateFieldSpecified;
            }
            set {
                this.itemDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemFormula {
            get {
                return this.itemFormulaField;
            }
            set {
                this.itemFormulaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public int ItemPrice {
            get {
                return this.itemPriceField;
            }
            set {
                this.itemPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemPriceSpecified {
            get {
                return this.itemPriceFieldSpecified;
            }
            set {
                this.itemPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ItemQuantity {
            get {
                return this.itemQuantityField;
            }
            set {
                this.itemQuantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemQuantitySpecified {
            get {
                return this.itemQuantityFieldSpecified;
            }
            set {
                this.itemQuantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
    public partial class CompositeType {
        
        private bool boolValueField;
        
        private bool boolValueFieldSpecified;
        
        private string stringValueField;
        
        /// <remarks/>
        public bool BoolValue {
            get {
                return this.boolValueField;
            }
            set {
                this.boolValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified {
            get {
                return this.boolValueFieldSpecified;
            }
            set {
                this.boolValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/PharmacyServer")]
    public partial class OrderClass {
        
        private string itemNameField;
        
        private int itemPriceField;
        
        private bool itemPriceFieldSpecified;
        
        private int itemQuantityField;
        
        private bool itemQuantityFieldSpecified;
        
        private string itemTypeField;
        
        private int total1Field;
        
        private bool total1FieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public int ItemPrice {
            get {
                return this.itemPriceField;
            }
            set {
                this.itemPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemPriceSpecified {
            get {
                return this.itemPriceFieldSpecified;
            }
            set {
                this.itemPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ItemQuantity {
            get {
                return this.itemQuantityField;
            }
            set {
                this.itemQuantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemQuantitySpecified {
            get {
                return this.itemQuantityFieldSpecified;
            }
            set {
                this.itemQuantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemType {
            get {
                return this.itemTypeField;
            }
            set {
                this.itemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Total1 {
            get {
                return this.total1Field;
            }
            set {
                this.total1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Total1Specified {
            get {
                return this.total1FieldSpecified;
            }
            set {
                this.total1FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void RegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool loginResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool loginResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void resetPasswordCompletedEventHandler(object sender, resetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool resetPasswordResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool resetPasswordResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void forgetPasswordCompletedEventHandler(object sender, forgetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forgetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forgetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool forgetPasswordResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool forgetPasswordResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void addCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void delete_productCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void showAllCompletedEventHandler(object sender, showAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void updateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void searchNameCompletedEventHandler(object sender, searchNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void searchFormulaCompletedEventHandler(object sender, searchFormulaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchFormulaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchFormulaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void searchTypeCompletedEventHandler(object sender, searchTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StockClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StockClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void add_orderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void showorderCompletedEventHandler(object sender, showorderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showorderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showorderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderClass[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderClass[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void deleteOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void update_StockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591